name: Publish and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10.1"
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.1.12"
      - name: Reset to Tag
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: |
          git reset --hard $(git tag -l --sort=-version:refname | head -1)
      - name: Build
        run: |
          mkdir dist
          poetry config http-basic.pypi "$PYPI_USERNAME" "$PYPI_PASSWORD"	
          poetry config virtualenvs.in-project true
          poetry install --no-root
          poetry build
      - name: Publish
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          PYPI_USERNAME: __token__
          PYPI_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry publish --username $PYPI_USERNAME --password $PYPI_PASSWORD
      - name: Save dist
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Get Tag
        id: tag
        run: |
          TAG="$(git tag -l --sort=-version:refname | head -1)"
          echo "::set-output name=tag::$TAG"
          echo "::set-output name=tagName::${TAG#v}"
      - name: Build Release
        id: release
        uses: MatteoCampinoti94/changelog-to-release@v1.0.2
        with:
          version-name: ${{ steps.tag.outputs.tagName }}
      - name: Build Release File
        env:
          TAG: ${{ steps.tag.outputs.tag }}
          RELEASE: ${{ steps.release.outputs.body }}
        run: |
          PREVIOUS_TAG="$(git tag -l --sort=-version:refname | head -2 | tail -1)"
          printf "%s\n" "$RELEASE" > RELEASE.md
          printf "\n## ðŸ”— Links\n" >> RELEASE.md
          printf "\n* %s" "PyPi release: https://pypi.org/project/${GITHUB_REPOSITORY#*/}/${TAG#v}" >> RELEASE.md
          printf "\n* %s" "Full changelog: https://github.com/$GITHUB_REPOSITORY/compare/$PREVIOUS_TAG...$TAG" >> RELEASE.md
          cat RELEASE.md
          printf "\n\n## Dist Files\n"
          ls -l dist || echo "  no files"
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.release.outputs.title }}
          body_path: RELEASE.md
          files: |
            dist/*